{"version":3,"sources":["_components/AddCategory.js","_helpers/getGifs.js","_hooks/useFecthGifs.js","_components/GifGridItem.js","_components/GifGrid.js","_components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","className","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFecthGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","src","alt","GifGrid","image","key","GifExpertApp","categories","categoria","ReactDOM","render","document","getElementById"],"mappings":"6MAkCeA,EAhCK,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,cAAsB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAgB3C,OACE,oCACE,0BAAMC,SAZa,SAACC,GAClBA,EAAEC,iBAEFC,QAAQC,IAAI,oBACTN,EAAWO,OAAOC,OAAS,IAC1BV,GAAe,SAAAW,GAAI,OAAKT,GAAL,mBAAoBS,OACvCR,EAAc,OAOpB,2BAAOS,KAAK,OACJC,UAAU,eACVC,YAAY,uBACZC,MAAOb,EACPc,SApBgB,SAACX,GACxBF,EAAcE,EAAEY,OAAOF,a,uBCUfG,EAdM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAWH,GAD7C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG1Cd,QAAQC,IAAImB,GAXQ,kBAYZA,GAZY,4CAAH,sDCiBNO,EAjBa,SAACf,GAAc,IAAD,EAEZlB,mBAAS,CAC/ByB,KAAM,GACNS,SAAS,IAJyB,mBAE/BC,EAF+B,KAEvBC,EAFuB,KActC,OAREC,qBAAW,WACTpB,EAAQC,GAAUoB,MAAM,SAAAC,GACpBH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAGjB,CAAChB,IACEiB,GCDIK,EAbY,SAAC,GAAuB,EAArBX,GAAsB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACvC,OACI,oCACO,yBAAKR,UAAU,mBACf,4BAAQA,UAAU,UACtB,yBAAK6B,IAAKrB,EAAMR,UAAU,+BAA+B8B,IAAMZ,IAC9D,gCAAYlB,UAAU,6BAA8BkB,OCkBhDa,EAtBQ,SAAC,GAAgB,IAAfzB,EAAc,EAAdA,SAAc,EAEFe,EAAcf,GAAlCa,EAFsB,EAE3BN,KAAcS,EAFa,EAEbA,QAElB,OACC,oCACD,wBAAItB,UAAU,wCAAwCM,GACpDgB,GAAW,uBAAGtB,UAAU,oCAAb,YACZ,yBAAKA,UAAU,UAENmB,EAAOJ,KAAK,SAAAiB,GAAK,OAChB,kBAAC,EAAD,eACCC,IAAKD,EAAMf,IACPe,UCQTE,EAtBM,WAAO,IAAD,EAEU9C,mBAAS,CAAC,WAFpB,mBAEnB+C,EAFmB,KAEPhD,EAFO,KAIvB,OACA,oCACA,yBAAKa,UAAU,UACf,wBAAIA,UAAU,oBAAd,gBACA,6BACA,kBAAC,EAAD,CAAab,cAAiBA,IAGnBgD,EAAWpB,KAAK,SAAAqB,GACZ,OAAO,kBAAC,EAAD,CAASH,IAAKG,EAAW9B,SAAU8B,U,MCX7DC,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.4afdb316.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst AddCategory = ( {setCategorias}   ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n       setInputValue(e.target.value);\r\n    } \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //para evitar el  refres de todo el navegador como se hacia antes\r\n        console.log('sumbit realizado' );\r\n        if(inputValue.trim().length > 2) {\r\n            setCategorias( cats => [inputValue, ...cats]);\r\n            setInputValue('')\r\n        }\r\n       \r\n    }\r\n  return (\r\n    <>\r\n      <form onSubmit= {handleSubmit}>\r\n      <input type=\"text\" \r\n              className=\"form-control\" \r\n              placeholder=\"Ingresa Tu personaje\"\r\n              value={inputValue}\r\n              onChange={handleInputChange}>\r\n              </input>\r\n      </form>\r\n    </>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategorias : PropTypes.func.isRequired\r\n}\r\nexport default AddCategory;","\r\n\r\n export const getGifs = async (category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=20&api_key=8wph8qQHiDE4mDOy0FWSjgheCaC7geLT`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id : img.id,\r\n            title: img.title,\r\n            url :img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    console.log(gifs);\r\n     return gifs;\r\n}\r\nexport default getGifs;","import { useState ,useEffect} from \"react\"\r\nimport getGifs from './../_helpers/getGifs';\r\nexport const useFecthGifs = (category) => {\r\n\r\n    const [state , setState] =useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n      useEffect( ()=> {\r\n        getGifs(category).then( imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        })\r\n     }, [category]);\r\n    return state\r\n}\r\n\r\nexport default useFecthGifs;","import React from 'react';\r\n\r\nexport const GifGridItem = ( {id , title, url}) => {\r\n   return (\r\n       <>\r\n              <div className=\"float-left mr-2\">\r\n              <figure className=\"figure\">\r\n          <img src={url}  className=\"figure-img img-fluid rounded\" alt={ title}></img>\r\n           <figcaption className=\"figure-caption text-right\">{ title}</figcaption>\r\n           </figure>\r\n              </div>\r\n        </>\r\n   )\r\n}\r\n\r\nexport default GifGridItem;","import React from 'react';\r\nimport useFecthGifs from '../_hooks/useFecthGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data:images , loading} = useFecthGifs( category);\r\n\r\n        return (\r\n         <>   \r\n        <h3 className=\"row animate__animated animate__flash\">{category}</h3>  \r\n         {loading && <p className=\"animate__animated animate__flash\">Loading </p>}\r\n         <div className=\"col-12\">\r\n                {\r\n                  images.map( image => (\r\n                   <GifGridItem \r\n                    key={image.id}\r\n                    {...image}\r\n                   />\r\n                  ))\r\n                }\r\n         </div>\r\n         </>\r\n        )\r\n    }\r\n\r\nexport default GifGrid;","import React, { useState } from 'react';\r\nimport AddCategory from './AddCategory'\r\nimport GifGrid from  './GifGrid';\r\nconst GifExpertApp = () => {\r\n\r\nconst  [categories, setCategorias] = useState(['marvel'])\r\n\r\n    return (\r\n    <>\r\n    <div className='col-12'>\r\n    <h2 className='mt-4 text-center'>GifExpertApp</h2>\r\n    <hr/>\r\n    <AddCategory setCategorias = {setCategorias}/> \r\n       \r\n           {\r\n               categories.map( categoria => {\r\n                   return <GifGrid key={categoria} category={categoria}/>\r\n               })\r\n           }\r\n       \r\n    </div>\r\n    \r\n    </>\r\n    )\r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './_components/GifExpertApp'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n   \n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}